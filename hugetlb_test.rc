KERNEL_SRC=/src/linux-dev
. test_core/lib/common.sh
. test_core/lib/setup_mce_tools.sh
. test_core/lib/setup_hugetlb_base.sh
. setup_mce_capability_check.sh
. setup_hugetlb_test.sh

#!TABLE: hugetlb_test.rc.table

# INJECT_TYPE=mce-srao
# TARGET_PAGEFLAG="huge,compound_head,mmap=huge,compound_head"
# TEST_TITLE=hugetlb_race_on_free_hugepage_mce-srao
# TEST_PREPARE=prepare_hugetlb_race
# TEST_CLEANUP=cleanup_hugetlb_race
# TEST_CONTROLLER=control_multiple_inject_race
# TEST_CHECKER=check_hugetlb_race
# TEST_FLAGS=devel
# TEST_RETRYABLE=
# EXPECTED_RETURN_CODE="START EXIT"
# NR_THREAD=4
# MONARCH_TIMEOUT=2000000
# do_test_async

TEST_TITLE=hugetlb_race_on_free_hugepage_hard-offline
INJECT_TYPE=hard-offline
TARGET_PAGEFLAG="huge,compound_head,mmap=huge,compound_head"
TEST_PREPARE=prepare_hugetlb_race
TEST_CLEANUP=cleanup_hugetlb_race
TEST_CONTROLLER=control_multiple_inject_race
TEST_CHECKER=check_hugetlb_race
TEST_FLAGS=
TEST_RETRYABLE=
EXPECTED_RETURN_CODE="START EXIT"
NR_THREAD=4
MONARCH_TIMEOUT=2000000
FIXEDBY_SUBJECT="mm: soft-offline: don't free target page in successful page migration|mm/memory-failure: introduce get_hwpoison_page() for consistent refcount handling|mm/memory-failure: split thp earlier in memory error handling|mm/hwpoison-inject: check PageLRU of hpage|mm/hwpoison-inject: fix refcounting in no-injection case|mm/memory-failure: call shake_page() when error hits thp tail page|mm: hugetlb: cleanup using paeg_huge_active()|mm: hugetlb: introduce page_huge_active"
FIXEDBY_PATCH_SEARCH_DATE="Apr 1 2015"
do_test_async

TEST_TITLE=hugetlb_race_on_free_hugepage_soft-offline
INJECT_TYPE=soft-offline
TARGET_PAGEFLAG="huge,compound_head,mmap=huge,compound_head"
TEST_PREPARE=prepare_hugetlb_race
TEST_CLEANUP=cleanup_hugetlb_race
TEST_CONTROLLER=control_multiple_inject_race
TEST_CHECKER=check_hugetlb_race
TEST_FLAGS=
TEST_RETRYABLE=
EXPECTED_RETURN_CODE="START EXIT"
NR_THREAD=4
MONARCH_TIMEOUT=2000000
FIXEDBY_SUBJECT="mm: soft-offline: don't free target page in successful page migration|mm/memory-failure: introduce get_hwpoison_page() for consistent refcount handling|mm/memory-failure: split thp earlier in memory error handling|mm/hwpoison-inject: check PageLRU of hpage|mm/hwpoison-inject: fix refcounting in no-injection case|mm/memory-failure: call shake_page() when error hits thp tail page|mm: hugetlb: cleanup using paeg_huge_active()|mm: hugetlb: introduce page_huge_active"
FIXEDBY_PATCH_SEARCH_DATE="Apr 1 2015"
do_test_async

TEST_TITLE=hugetlb_race_on_free_hugepage_hard-soft
INJECT_TYPE=hard-soft
TARGET_PAGEFLAG="huge,compound_head,mmap=huge,compound_head"
TEST_PREPARE=prepare_hugetlb_race
TEST_CLEANUP=cleanup_hugetlb_race
TEST_CONTROLLER=control_multiple_inject_race
TEST_CHECKER=check_hugetlb_race
TEST_FLAGS=
TEST_RETRYABLE=
EXPECTED_RETURN_CODE="START EXIT"
NR_THREAD=4
MONARCH_TIMEOUT=2000000
FIXEDBY_SUBJECT="mm: soft-offline: don't free target page in successful page migration|mm/memory-failure: introduce get_hwpoison_page() for consistent refcount handling|mm/memory-failure: split thp earlier in memory error handling|mm/hwpoison-inject: check PageLRU of hpage|mm/hwpoison-inject: fix refcounting in no-injection case|mm/memory-failure: call shake_page() when error hits thp tail page|mm: hugetlb: cleanup using paeg_huge_active()|mm: hugetlb: introduce page_huge_active"
FIXEDBY_PATCH_SEARCH_DATE="Apr 1 2015"
do_test_async

TEST_TITLE=race_on_buddy_hard-offline
TARGET_PAGEFLAG="buddy"
INJECT_TYPE=hard-offline
TEST_PREPARE=prepare_hugetlb_race
TEST_CLEANUP=cleanup_hugetlb_race
TEST_CONTROLLER=control_multiple_inject_race
TEST_CHECKER=check_hugetlb_race
TEST_FLAGS=
TEST_RETRYABLE=
EXPECTED_RETURN_CODE="START EXIT"
NR_THREAD=4
MONARCH_TIMEOUT=2000000
FIXEDBY_SUBJECT="mm: soft-offline: don't free target page in successful page migration|mm/memory-failure: introduce get_hwpoison_page() for consistent refcount handling|mm/memory-failure: split thp earlier in memory error handling|mm/hwpoison-inject: check PageLRU of hpage|mm/hwpoison-inject: fix refcounting in no-injection case|mm/memory-failure: call shake_page() when error hits thp tail page|mm: hugetlb: cleanup using paeg_huge_active()|mm: hugetlb: introduce page_huge_active"
FIXEDBY_PATCH_SEARCH_DATE="Apr 1 2015"
do_test_async

TEST_TITLE=race_on_buddy_soft-offline
TARGET_PAGEFLAG="buddy"
INJECT_TYPE=soft-offline
TEST_PREPARE=prepare_hugetlb_race
TEST_CLEANUP=cleanup_hugetlb_race
TEST_CONTROLLER=control_multiple_inject_race
TEST_CHECKER=check_hugetlb_race
TEST_FLAGS=
TEST_RETRYABLE=
EXPECTED_RETURN_CODE="START EXIT"
NR_THREAD=4
MONARCH_TIMEOUT=2000000
FIXEDBY_SUBJECT="mm: soft-offline: don't free target page in successful page migration|mm/memory-failure: introduce get_hwpoison_page() for consistent refcount handling|mm/memory-failure: split thp earlier in memory error handling|mm/hwpoison-inject: check PageLRU of hpage|mm/hwpoison-inject: fix refcounting in no-injection case|mm/memory-failure: call shake_page() when error hits thp tail page|mm: hugetlb: cleanup using paeg_huge_active()|mm: hugetlb: introduce page_huge_active"
FIXEDBY_PATCH_SEARCH_DATE="Apr 1 2015"
do_test_async

TEST_TITLE=race_on_buddy_hard-soft
TARGET_PAGEFLAG="buddy"
INJECT_TYPE=hard-soft
TEST_PREPARE=prepare_hugetlb_race
TEST_CLEANUP=cleanup_hugetlb_race
TEST_CONTROLLER=control_multiple_inject_race
TEST_CHECKER=check_hugetlb_race
TEST_FLAGS=
TEST_RETRYABLE=
EXPECTED_RETURN_CODE="START EXIT"
NR_THREAD=4
MONARCH_TIMEOUT=2000000
FIXEDBY_SUBJECT="mm: soft-offline: don't free target page in successful page migration|mm/memory-failure: introduce get_hwpoison_page() for consistent refcount handling|mm/memory-failure: split thp earlier in memory error handling|mm/hwpoison-inject: check PageLRU of hpage|mm/hwpoison-inject: fix refcounting in no-injection case|mm/memory-failure: call shake_page() when error hits thp tail page|mm: hugetlb: cleanup using paeg_huge_active()|mm: hugetlb: introduce page_huge_active"
FIXEDBY_PATCH_SEARCH_DATE="Apr 1 2015"
do_test_async

TEST_TITLE=race_on_anonymou_hard-offline
TARGET_PAGEFLAG=anonymous
INJECT_TYPE=hard-offline
TEST_PREPARE=prepare_hugetlb_race
TEST_CLEANUP=cleanup_hugetlb_race
TEST_CONTROLLER=control_multiple_inject_race
TEST_CHECKER=check_hugetlb_race
TEST_FLAGS=
TEST_RETRYABLE=
EXPECTED_RETURN_CODE="START EXIT"
NR_THREAD=4
MONARCH_TIMEOUT=2000000
FIXEDBY_SUBJECT="mm: soft-offline: don't free target page in successful page migration|mm/memory-failure: introduce get_hwpoison_page() for consistent refcount handling|mm/memory-failure: split thp earlier in memory error handling|mm/hwpoison-inject: check PageLRU of hpage|mm/hwpoison-inject: fix refcounting in no-injection case|mm/memory-failure: call shake_page() when error hits thp tail page|mm: hugetlb: cleanup using paeg_huge_active()|mm: hugetlb: introduce page_huge_active"
FIXEDBY_PATCH_SEARCH_DATE="Apr 1 2015"
do_test_async

TEST_TITLE=hard-soft_race_anonymous
TARGET_PAGEFLAG=anonymous
INJECT_TYPE=soft-offline
TEST_PREPARE=prepare_hugetlb_race
TEST_CLEANUP=cleanup_hugetlb_race
TEST_CONTROLLER=control_multiple_inject_race
TEST_CHECKER=check_hugetlb_race
TEST_FLAGS=
TEST_RETRYABLE=
EXPECTED_RETURN_CODE="START EXIT"
NR_THREAD=4
MONARCH_TIMEOUT=2000000
FIXEDBY_SUBJECT="mm: soft-offline: don't free target page in successful page migration|mm/memory-failure: introduce get_hwpoison_page() for consistent refcount handling|mm/memory-failure: split thp earlier in memory error handling|mm/hwpoison-inject: check PageLRU of hpage|mm/hwpoison-inject: fix refcounting in no-injection case|mm/memory-failure: call shake_page() when error hits thp tail page|mm: hugetlb: cleanup using paeg_huge_active()|mm: hugetlb: introduce page_huge_active"
FIXEDBY_PATCH_SEARCH_DATE="Apr 1 2015"
do_test_async

TEST_TITLE=hard-soft_race_anonymous
TARGET_PAGEFLAG=anonymous
INJECT_TYPE=hard-soft
TEST_PREPARE=prepare_hugetlb_race
TEST_CLEANUP=cleanup_hugetlb_race
TEST_CONTROLLER=control_multiple_inject_race
TEST_CHECKER=check_hugetlb_race
TEST_FLAGS=
TEST_RETRYABLE=
EXPECTED_RETURN_CODE="START EXIT"
NR_THREAD=4
MONARCH_TIMEOUT=2000000
FIXEDBY_SUBJECT="mm: soft-offline: don't free target page in successful page migration|mm/memory-failure: introduce get_hwpoison_page() for consistent refcount handling|mm/memory-failure: split thp earlier in memory error handling|mm/hwpoison-inject: check PageLRU of hpage|mm/hwpoison-inject: fix refcounting in no-injection case|mm/memory-failure: call shake_page() when error hits thp tail page|mm: hugetlb: cleanup using paeg_huge_active()|mm: hugetlb: introduce page_huge_active"
FIXEDBY_PATCH_SEARCH_DATE="Apr 1 2015"
do_test_async

TEST_TITLE=hugetlb_race_between_injection_and_mmap_fault_munmap
TEST_PREPARE=prepare_$TEST_TITLE
TEST_CLEANUP=cleanup_$TEST_TITLE
TEST_CONTROLLER=control_$TEST_TITLE
TEST_CHECKER=check_$TEST_TITLE
EXPECTED_RETURN_CODE="START EXIT"
TEST_FLAGS=
ERROR_TYPE=hard-offline
FIXEDBY_SUBJECT="mm: soft-offline: don't free target page in successful page migration|mm/memory-failure: introduce get_hwpoison_page() for consistent refcount handling|mm/memory-failure: split thp earlier in memory error handling|mm/hwpoison-inject: check PageLRU of hpage|mm/hwpoison-inject: fix refcounting in no-injection case|mm/memory-failure: call shake_page() when error hits thp tail page|mm: hugetlb: cleanup using paeg_huge_active()|mm: hugetlb: introduce page_huge_active"
FIXEDBY_PATCH_SEARCH_DATE="Apr 1 2015"
do_test_async
